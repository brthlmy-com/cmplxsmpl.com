name: Daily Telegram Digest
on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * *"
env:
  API_TOKEN: ${{ secrets.TG_APITOKEN}}
  CHAT_ID: ${{ secrets.TG_CHATID }}
jobs:
  klenkesDigest:
    name: "Telegram Klenkes Digest"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        # install dependencies for scraper script
        run: npm ci
        working-directory: ./sh/digest-events-message
      - name: Set message
        run: |
         echo -e "MESSAGE="$(node ./sh/digest-events-message/ ./_data/events/$(date +"%Y-%m-%d").json)"" >> $GITHUB_ENV
      - name: Send telegram message
        run: |
          curl -s -X POST https://api.telegram.org/bot$API_TOKEN/sendMessage -d chat_id=$CHAT_ID -d text="$MESSAGE" -d parse_mode=HTML -d protect_content=true -d disable_notification=true > /dev/null 2>&1
      - name: Save telegram message
        run: |
          mkdir -p "./_data/archive/klenkes/" && \
          echo "{ raw: \"$MESSAGE\" }" > "./_data/archive/klenkes/$(date +"%Y-%m-%d").json"
      - name: Set up git config
        # commit as a made up bot user
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Commit
        # if there are changes commit and push
        run: |
          git pull && git add .
          # only commit if there's a change
          git diff --quiet --staged || git commit -m "Updated: TG Klenkes message today $(date +"%Y-%m-%d")"
          git push origin master
  flockDigest:
    name: "Telegram Partyflock Digest"
    runs-on: ubuntu-latest
    needs: klenkesDigest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        # install dependencies for scraper script
        run: npm ci
        working-directory: ./sh/digest-partyflock-message
      - name: Set message
        run: |
         echo -e "MESSAGE="$(node ./sh/digest-partyflock-message/ ./_data/partyflock/$(date +"%Y-%m-%d").json)"" >> $GITHUB_ENV
      - name: Send telegram message
        run: |
          curl -s -X POST https://api.telegram.org/bot$API_TOKEN/sendMessage -d chat_id=$CHAT_ID -d text="$MESSAGE" -d parse_mode=HTML -d protect_content=true -d disable_notification=true > /dev/null 2>&1
      - name: Save telegram message
        run: |
          mkdir -p "./_data/archive/partyflock/" && \
          echo "{ raw: \"$MESSAGE\" }" > "./_data/archive/partyflock/$(date +"%Y-%m-%d").json"
      - name: Set up git config
        # commit as a made up bot user
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Commit
        # if there are changes commit and push
        run: |
          git pull && git add .
          # only commit if there's a change
          git diff --quiet --staged || git commit -m "Updated: TG Partyflock message today $(date +"%Y-%m-%d")"
          git push origin master
  ytDigest:
    name: "Telegram Youtube Digest"
    runs-on: ubuntu-latest
    needs: [flockDigest, klenkesDigest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        # install dependencies for scraper script
        run: npm ci
        working-directory: ./sh/digest-youtube-message
      - name: Set message
        run: |
         echo -e "MESSAGE="$(node ./sh/digest-youtube-message/ ./_data/yt-stats.json)"" >> $GITHUB_ENV
      - name: Send telegram message
        run: |
          curl -s -X POST https://api.telegram.org/bot$API_TOKEN/sendMessage -d chat_id=$CHAT_ID -d text="$MESSAGE" -d parse_mode=HTML -d protect_content=true -d disable_notification=true > /dev/null 2>&1
      - name: Save telegram message
        run: |
          mkdir -p "./_data/archive/youtube/" && \
          echo "{ raw: \"$MESSAGE\" }" > "./_data/archive/youtube/$(date +"%Y-%m-%d").json"
      - name: Set up git config
        # commit as a made up bot user
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Commit
        # if there are changes commit and push
        run: |
          git pull && git add .
          git add .
          # only commit if there's a change
          git diff --quiet --staged || git commit -m "Updated: TG Youtube message today $(date +"%Y-%m-%d")"
          git push origin master
